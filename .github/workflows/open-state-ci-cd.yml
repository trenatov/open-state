name: Open State CI/CD

on:
  release:
    types: [published]

env:
  IMAGE_TAG: latest

jobs:

  build:
    name: Build project
    runs-on: ubuntu-latest
    continue-on-error: false
    if: github.event.action == 'published'

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Java SDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build project
        run: ./gradlew assemble

      - name: Save executables
        uses: actions/upload-artifact@v2
        with:
          name: assembles_${{ github.sha }}
          path: build/libs/*.jar

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [build]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy server
        run: |
          sudo apt install openssh-client
          sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          eval $(ssh-agent -s)
          echo "${{ secrets.PROD_DEPLOY_SSH_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan ${{ secrets.PROD_SERVER }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          export DOCKER_HOST="ssh://gitlab@${{ secrets.PROD_SERVER }}"
          export BITCOIN_NODE="${{ secrets.PROD_BITCOIN_NODE }}"
          export BITCOIN_USERNAME="${{ secrets.PROD_BITCOIN_USERNAME }}"
          export BITCOIN_PASSWORD="${{ secrets.PROD_BITCOIN_PASSWORD }}"
          export ETHEREUM_NODE_ADDRESS="${{ secrets.PROD_ETHEREUM_NODE_ADDRESS }}"
          export MONGODB_PASSWORD="${{ secrets.PROD_MONGO_PASSWORD }}"
          export DOCKER_IMAGE_TAG="openplatform/open-state:${{ env.IMAGE_TAG }}"
          docker login -u ${{ secrets.DOCKERHUB_USER_NAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker-compose -f docker-compose.yml up -d
          ssh -i id_rsa gitlab@${{ secrets.PROD_SERVER }} "
                          docker stop open-state && \
                          IMG=\$(docker ps -a --filter='name=^/open-state --format='{{.Image}}') &&  \
                          docker rm -f open-state && \
                          docker rmi \$IMG; \
                          exit 0
                        "
          docker pull openplatform/open-state:${{ env.IMAGE_TAG }}
          docker run -d --name open-state --restart=always
                                    -p 8080:8080 \
                                     openplatform/open-state:${{ env.IMAGE_TAG }}
